version: '3.8'

services:
  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: fraudgraphx-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FraudGraphX API Service
  api:
    build: .
    container_name: fraudgraphx-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONPATH=/app/src
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./models:/app/models
      - ./demo_output:/app/demo_output
    depends_on:
      redis:
        condition: service_healthy
    command: uvicorn src.serve.advanced_api:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Real-time Monitoring Service
  monitor:
    build: .
    container_name: fraudgraphx-monitor
    ports:
      - "8765:8765"  # WebSocket
      - "8001:8001"  # Prometheus metrics
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONPATH=/app/src
    volumes:
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
    command: python -m src.features.real_time_monitor --redis-host redis

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: fraudgraphx-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: fraudgraphx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus

  # Jupyter for data exploration
  jupyter:
    build: .
    container_name: fraudgraphx-jupyter
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - PYTHONPATH=/app/src
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./notebooks:/app/notebooks
      - ./demo_output:/app/demo_output
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''

volumes:
  redis_data:
  prometheus_data:
  grafana_data: